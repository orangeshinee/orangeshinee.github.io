<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo网站主题美化记录</title>
    <url>//2018/09/hexo-next-customization/</url>
    <content><![CDATA[<p>Next一直是Hexo最热门的主题,本站采用了Next的Pisces主题,然后根据其他大佬的美化教程进行适当修改,记录一下.<br>虽然不是前端,但是对前端一直有兴趣,相比后端,前端作品完成后给人的成就感来的更直接,看到写出来的东西可以立即展现确实是一直道不出的乐趣.<br>网站纯粹因为兴趣,我是个喜欢小细节让自己满意的人,只要认定了的就必须改,所以经常会因为一丢丢小地方达不到自己想要的而<code>废寝忘食</code>,没办法前端页面懂得不多,每次看一点忘一点.也不是没有收获~</p>
<span id="more"></span>

<h2 id="网站主页面"><a href="#网站主页面" class="headerlink" title="网站主页面"></a>网站主页面</h2><p><a href="https://shineee.win/">主页面</a>是看到了 <a href="https://github.com/iissnan">@iissnan</a> 的<a href="http://iissnan.com/">主页</a>。clone一下,稍稍加了个头像和背景.</p>
<p>还有一个我很喜欢的是<a href="https://github.com/zchen9">@zchen9</a>的<a href="https://www.chen9.info/">主页</a>,可惜功力不够无法<del>复刻</del>（copy）</p>
<h2 id="博客首页"><a href="#博客首页" class="headerlink" title="博客首页"></a>博客首页</h2><h3 id="修改页面大小"><a href="#修改页面大小" class="headerlink" title="修改页面大小"></a>修改页面大小</h3><p>Pisces主题的页面比较大,稍微小一点比较有紧凑感,更改了页面宽度,使得侧栏和主页面居中：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.header</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">960px</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container</span> <span class="selector-class">.main-inner</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">960px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="侧栏网站logo"><a href="#侧栏网站logo" class="headerlink" title="侧栏网站logo"></a>侧栏网站logo</h3><p>本来是title和subtitle,不好看,单改字体又没那种感觉,就自己ps了一个logo,然后在<code>\next\layout\_partials\header\brand.swig</code>中修改了一下,将title换成了图片:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&#123;&#123; config.root &#125;&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;brand&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;start&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;logo-line-before&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;site-title&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img.png&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;logo-line-after&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>同时加了一个鼠标移动效果:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.site-meta</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.9</span>);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">70px</span> <span class="number">70px</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">8px</span> <span class="number">20px</span> -<span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.6</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.site-meta</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.8</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">2px</span> <span class="number">15px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.6</span>);</span><br><span class="line">    <span class="attribute">transition</span>: all <span class="number">0.2s</span> linear;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="自定义图标"><a href="#自定义图标" class="headerlink" title="自定义图标"></a>自定义图标</h3><p>图标来自<a href="https://www.iconfont.cn/">阿里巴巴图标库</a>,真的是好用的一皮.选择心仪的图标加入到你的项目中,然后就可以直接调用了.这里采用的是<code>symbol引用</code></p>
<blockquote>
<p>这是一种全新的使用方式，应该说这才是未来的主流，也是平台目前推荐的用法。相关介绍可以参考这篇<a href="https://www.iconfont.cn/help/detail?spm=a313x.7781069.1998910419.d8cf4382a&helptype=code">文章</a> 这种用法其实是做了一个svg的集合，与上面两种相比具有如下特点：</p>
<ul>
<li>支持多色图标了，不再受单色限制。</li>
<li>通过一些技巧，支持像字体那样，通过<code>font-size</code>,<code>color</code>来调整样式。</li>
<li>兼容性较差，支持 ie9+,及现代浏览器。</li>
<li>浏览器渲染svg的性能一般，还不如png。</li>
</ul>
</blockquote>
<p>主要是因为它是彩色的,好看……o((≧▽≦o) ～</p>
<ol>
<li><p>在图标库选择好你的图标后，选择Symbol，复制css链接，加入到<code>blog/source/data/head.swig</code>中</p>
</li>
<li><p>在styles.styl中加入.icon样式</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.icon</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">20px</span>; <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">vertical-align</span>: -<span class="number">4.5px</span>;</span><br><span class="line">    <span class="attribute">fill</span>: currentColor;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>在<code>\next\layout\_partials\header\menu-item.swig</code>中修改,将图标格式修改为svg</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&#123;%- set menuText = __(&#x27;<span class="selector-tag">menu</span>.&#x27; + name) | replace(&#x27;<span class="selector-tag">menu</span>.&#x27;, &#x27;&#x27;) %&#125;</span><br><span class="line">&#123;%- if theme<span class="selector-class">.menu_settings</span><span class="selector-class">.icons</span> %&#125;</span><br><span class="line">	&#123;%- set menuIcon = &#x27;&lt;<span class="selector-tag">svg</span> class=&quot;<span class="attribute">icon</span> aria-hidden=&quot;true&quot;&gt;&lt;<span class="selector-tag">use</span> xlink:href=<span class="string">&quot;#&#x27; + value.split(&#x27;||&#x27;)[1] | trim | default(&#x27;icon-zhizhuxia&#x27;) + &#x27;&quot;</span>&gt;&lt;/use&gt;&lt;/svg&gt;&lt;br&gt;<span class="string">&#x27; %&#125;</span></span><br><span class="line"><span class="string">&#123;%- endif %&#125;</span></span><br></pre></td></tr></table></figure>

<p>这里参看阿里巴巴图标库的<a href="https://www.iconfont.cn/help/detail?spm=a313x.7781069.1998910419.d8cf4382a&helptype=code">使用教程</a></p>
<p>最后，在<code>next\_config.yml</code>中将图标名称改成阿里图标库中的名称就可以了</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">social:</span><br><span class="line">  GitHub: https://github.com/xxx || icon-github-footer</span><br></pre></td></tr></table></figure></li>
</ol>
<p>侧栏中社交链接图标也是如此</p>
<h3 id="归档页面显示十二生肖"><a href="#归档页面显示十二生肖" class="headerlink" title="归档页面显示十二生肖"></a>归档页面显示十二生肖</h3><p>参考大佬的<a href="https://guanqr.com/tech/website/hexo-theme-next-customization/">配置</a>，然后在自己修改一下css就ok。</p>
<h3 id="其他细节"><a href="#其他细节" class="headerlink" title="其他细节"></a>其他细节</h3><p>类似标签、背景动画、评论以及next主题自带原有的功能不再赘述，Google一下大把，最重要的还是要自己喜欢，同时能够在学习大佬的过程中不断提升自己。</p>
<h2 id="参考大佬"><a href="#参考大佬" class="headerlink" title="参考大佬"></a>参考大佬</h2><p>以下是在博客搭建和美化过程中搜到的大佬们，网站很棒内容很干，希望有一天也能成为<del>大佬中的一员</del>(不，你不想.jpg)</p>
<p><a href="https://co5.me/">@co5&#x3D;Shioko</a></p>
<p><a href="https://moe.best/cross.html">@神代綺凜</a> 这个博客是基于Typecho的，但是很多东西还是可以借鉴的嘛～</p>
<p><a href="https://www.guanqr.com/">@荷戟独彷徨</a>  但是大佬已经转成<a href="https://github.com/gohugoio/hugo">Hugo</a>了 - -</p>
<p>长路漫漫，希望可以走的远一点。</p>
<p>多写，多搜，多思考。</p>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>Next</tag>
        <tag>Hexo</tag>
        <tag>HTML/CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo升级之旅</title>
    <url>//2022/05/hexo-hext-update/</url>
    <content><![CDATA[<p>Hexo-Next 已经升级到8.x了，我还用的7.2，且8.0之后更改了许多东西，模板文件也从swig改成njk了，顺便动动吧；</p>
<span id="more"></span>

<h1 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h1><p><a href="https://theme-next.js.org/docs/getting-started/upgrade.html">官方升级文档</a></p>
<p>如果之前没有对主题文件做过太多改动的话，工作量会比较小，只需要把<code>themes</code>文件下的<code>_config.yml</code>复制保留出来，然后clone最新的主题文件，再修改就OK了；<br>如果有更改（比如我，改了很多，且都是在原模板改的，就比较蛋疼，记得把对应文件调整就好；还好之前记录过自定义的内容）<br>后续的配置自定义文件也都分开来比较好，血的教训。</p>
<h1 id="评论系统"><a href="#评论系统" class="headerlink" title="评论系统"></a>评论系统</h1><p>Next自带的不再支持Valine了，所以暂时改成了畅言，但畅言需要注册才能回复，所以后续还是改改（</p>
<div class="note info"><p>2022-05-22 更新，更改为utterances，使用Github的issues记录评论；</p>
</div>


<h1 id="样式修复"><a href="#样式修复" class="headerlink" title="样式修复"></a>样式修复</h1><p>8.0之后对html文件的一些class更改了，导致原先的一些自定义样式无法生效，已修正；</p>
<h1 id="后续TODO"><a href="#后续TODO" class="headerlink" title="后续TODO"></a>后续TODO</h1><ul>
<li><input disabled="" type="checkbox"> 相册图片点卡之后的链接暂未修复，点开仍是缩略图；</li>
<li><input disabled="" type="checkbox"> 把SideBar的头图设置放到自定义文件里面;</li>
<li><input disabled="" type="checkbox"> 更改域名+备案；</li>
</ul>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>Next</tag>
        <tag>Hexo</tag>
        <tag>HTML/CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo-GitHub Actions 自动部署</title>
    <url>//2021/08/hexo-github-action/</url>
    <content><![CDATA[<p>突然想捡起来，把Hexo的东西整整，CI的自动部署关掉了，重新用GitHub的action来进行自动部署；</p>
<span id="more"></span>

<h1 id="首先"><a href="#首先" class="headerlink" title="首先"></a>首先</h1><p>你需要知道Hexo部署的正常逻辑；</p>
<pre class="mermaid">graph LR;
    a(本地源码更新)-->b(HexoGenerate);
    b-->c(生成静态文件);
    c-->d(HexoDeploy);
    d-->e(push到Github仓库)</pre>

<p>大致逻辑上如上图所示，在Github仓库展示的（一般仓库名都是<code>xxxx.orangeshinee.github.io</code>）只是<code>静态文件</code>，不包含本地的源码，类似<code>Themes</code>主题文件等配置；</p>
<p>而我们需要做的，就是把<code>本地源码</code>和最后要生成展示的<code>静态文件</code>分开保存，同时备份，这样在你更换电脑或者换了生产环境的时候，可以随时把源码pull下来继续更改，不用担心丢失问题；</p>
<h1 id="那么"><a href="#那么" class="headerlink" title="那么"></a>那么</h1><p>Github Action是如何工作的？能解决什么问题？<br>简单来说，就是能够监控你源码的更改状态，如果你的源码有更改，那么GA就会在线上帮你进行<code>Hexo Generate</code>和<code>Hexo Deploy</code>工作，不需要自己再手动部署；<br>同时，也分离了源码及静态文件，方便我们随时随地写文档；</p>
<pre class="mermaid">graph LR;
    a(本地源码更新);
    z-->a;
    a-->z(源码仓库);
    b(HexoGenerate);
    a-->f(GitAction监控);
    f-->b;
    b-->c(生成静态文件);
    c-->d(HexoDeploy);
    d-->e(push到Github仓库)</pre>

<h1 id="然后"><a href="#然后" class="headerlink" title="然后"></a>然后</h1><h2 id="1-新建仓库"><a href="#1-新建仓库" class="headerlink" title="1.新建仓库"></a>1.新建仓库</h2><p>假设你已经在本地部署过了，那么你的网站仓库已经有了；<br>接下来，我们新建一个仓库，把本地的源码上传上去，同时将这个仓库的属性改为个人可见（这步可选）；</p>
<h2 id="2-SSH配置"><a href="#2-SSH配置" class="headerlink" title="2.SSH配置"></a>2.SSH配置</h2><p>在本地打开git bash，然后运行<br><code>ssh-keygen -t ed25519 -C &quot;your_email@example.com&quot; -f ~/.ssh/hexo_key</code><br>会在本地生成一对公钥&amp;密钥，公钥就是后缀为<code>.pub</code>的文件；<br>如果你是windows电脑，那么配置文件会在<code>c://users/YourName/.ssh/</code>文件夹中；</p>
<h2 id="公钥部署"><a href="#公钥部署" class="headerlink" title="公钥部署"></a>公钥部署</h2><p>右键用记事本先打开公钥，即后缀<code>.pub</code>的文件，复制；<br>打开静态文件仓库(xxxxx.github.io)，点击设置，将公钥粘贴进去；<br><img data-src="https://picsshine.oss-cn-shenzhen.aliyuncs.com/images/20220417173301.png" alt="公钥部署"></p>
<h2 id="私钥部署"><a href="#私钥部署" class="headerlink" title="私钥部署"></a>私钥部署</h2><p>同上，我们将私钥的文本内容复制，部署到<strong>源码仓库</strong>；<br>这里的位置与公钥不一样，私钥部署是在<code>Secrets</code>的<code>Actions</code>中，点击右上角添加私钥；<br>需要注意名称，我们将私钥名称设置为<code>DEPLOY_KEY</code>(也可以是其他名字)，在后续步骤会用到；<br><img data-src="https://picsshine.oss-cn-shenzhen.aliyuncs.com/images/20220417173557.png" alt="私钥部署"></p>
<h2 id="3-新建Action"><a href="#3-新建Action" class="headerlink" title="3.新建Action"></a>3.新建Action</h2><p>然后转到<code>Actions</code>设置，点击<code>New workflow</code>新建一个工作流，会生成一个xxx.yml的文件，名字可随意；  </p>
<p><img data-src="https://picsshine.oss-cn-shenzhen.aliyuncs.com/images/20220417170818.png" alt="Actions设置"></p>
<h2 id="4-编辑配置文件"><a href="#4-编辑配置文件" class="headerlink" title="4.编辑配置文件"></a>4.编辑配置文件</h2><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># name为名称，可随意</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">HexoDeploy</span></span><br><span class="line"><span class="comment"># 触发条件，这里只要你对仓库进行push，就会运行</span></span><br><span class="line"><span class="attr">on:</span> [<span class="string">push</span>]</span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">pages:</span></span><br><span class="line">    <span class="comment"># 运行环境，即Action的运行环境，我们默认选ubuntu，详情见(https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#choosing-github-hosted-runners)</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="comment"># steps是步骤，我们总共进行了6步，需要更改的只有ssh配置那一步</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="comment"># 第一步，拉取你的源码，注意ref那里是不是你的仓库分支</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">ref:</span> <span class="string">main</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># 更新node环境，这里要注意，node版本要和你的hexo适配，过高可能会有问题；</span></span><br><span class="line">      <span class="comment"># 可以在本地运行hexo -v，就能看到node版本</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Use</span> <span class="string">Node.js</span> <span class="number">12.14</span><span class="number">.0</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&quot;12&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># 更新包及缓存</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Cache</span> <span class="string">NPM</span> <span class="string">Dependencies</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/cache@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">node_modules</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">$&#123;&#123;</span> <span class="string">runner.OS</span> <span class="string">&#125;&#125;-npm-cache</span></span><br><span class="line">          <span class="attr">restore-keys:</span> <span class="string">|</span></span><br><span class="line"><span class="string">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="comment"># 增加SSH KEY的配置</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Add</span> <span class="string">SSH</span> <span class="string">Private</span> <span class="string">Key</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="comment"># 这里的DEPLOY_KEY就是上文进行添加的</span></span><br><span class="line">          <span class="attr">SSH_PRIVATE:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.DEPLOY_KEY</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          mkdir -p ~/.ssh/</span></span><br><span class="line"><span class="string">          echo &quot;$SSH_PRIVATE&quot; &gt; ~/.ssh/id_rsa</span></span><br><span class="line"><span class="string">          chmod 700 -R ~/.ssh</span></span><br><span class="line"><span class="string">          ssh-keyscan github.com &gt;&gt; ~/.ssh/known_hosts</span></span><br><span class="line"><span class="string">          git config --global user.email &quot;你的邮箱&quot;</span></span><br><span class="line"><span class="string">          git config --global user.name &quot;你的名称&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="comment"># 安装包</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">Dependencies</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          npm install hexo-cli -g</span></span><br><span class="line"><span class="string">          npm install</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="comment"># 部署</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Hexo</span> <span class="string">Deploy</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          hexo clean</span></span><br><span class="line"><span class="string">          hexo deploy</span></span><br></pre></td></tr></table></figure>
<p>编辑完成后保存；</p>
<h2 id="5-没病走两步"><a href="#5-没病走两步" class="headerlink" title="5.没病走两步"></a>5.没病走两步</h2><p>上述增加Actions的步骤是在Github网站进行的，你也可以在本地进行，就是在仓库根目录新建一个<code>.github</code>文件夹，然后在里面新建一个<code>workflows</code>文件夹，然后将xxx.yml文件放入；</p>
<p>在本地更新一个文档，然后进行push；</p>
<p>此时Actions页面会自动运行一个任务，点进去可以看到详情；<br>黄色代表运行中，绿色代表部署成功，红色表示部署失败；</p>
<p><img data-src="https://picsshine.oss-cn-shenzhen.aliyuncs.com/images/20220417174354.png" alt="Action运行界面"></p>
<h1 id="一些坑"><a href="#一些坑" class="headerlink" title="一些坑"></a>一些坑</h1><ul>
<li>Node.js的版本问题，这个前面说过了，建议与本地的版本一致；</li>
<li>Hexo的版本问题，如果你的版本过低，有些配置会进行更改导致不再生效，需要用新的配置；<br>例如我这里的<code>Deprecated config detected: &quot;external_link&quot; with a Boolean value is deprecated. See https://hexo.io/docs/configuration for more details.</code>，就是指<code>external_link</code>的配置已经不再使用了，转为用<code>external_link.enable: true</code>这种配置；</li>
<li>SSH的部署问题，如果发现部署失败，里面提到<code>git@github.com: Permission denied (publickey).</code>类似的，多半是因为私钥或者公钥没有部署好导致的，可以仔细看看上面的步骤；</li>
</ul>
<h1 id="AND"><a href="#AND" class="headerlink" title="AND"></a>AND</h1><p>以上，完成了自动部署的整体工作，自己也大概了解了action的逻辑，后面就可以少折腾了；</p>
<hr>
<p>参考：</p>
<ol>
<li><a href="https://docs.github.com/cn/actions/quickstart" title="在 5 分钟或更短的时间内尝试 GitHub Actions 的功能。">GitHub Actions 快速入门 - GitHub Docs</a></li>
<li><a href="https://hexo.io/zh-tw/docs/github-pages.html">在 GitHub Pages 上部署 Hexo</a></li>
<li><a href="https://fly-koala.com/posts/9txgh5a2/">Hexo最速CICD部署，GitHub Actions！【最速攻略】</a></li>
</ol>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>Next</tag>
        <tag>Hexo</tag>
        <tag>HTML/CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo添加自定义相册</title>
    <url>//2018/12/custom-album/</url>
    <content><![CDATA[<p>不想拥有相册的blog不是好网站（</p>
<p>关于next主题下的相册搭建网上教程挺多的，但是很多都是那种瀑布流式，emmmmm…..</p>
<p>不符合我审美，我还是喜欢QQ空间式的（逃－</p>
<p>Google第一篇出来的是<a href="https://co5.me/2018/181112-gallerry2.html">css+markdown 实现 hexo 相册【进阶篇】</a>讲真的挺好看的，可能因为人家是自己画的 – </p>
<p>大体内容跟大佬的差不多，不过她用的是加载服务器上的图片，而我用的是图床。同时利用next已经整合的fancy box，达到点击图片放大查看的效果，而不是跳转到图片原页面。</p>
<span id="more"></span>

<h2 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">- 相册页面</span><br><span class="line">	- 相册封面</span><br><span class="line">		- 相册内容</span><br></pre></td></tr></table></figure>



<h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><p>步骤的话与上述教程基本一致,只是修改了部分css样式,同时,因为要使得相册页面下的图片调用fancybox,需要修改<code>\next\source\js\utils.js</code>的部分代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 如果是相册页面下的图片 启用fancybox</span></span><br><span class="line">    <span class="keyword">if</span> ($image.<span class="title function_">is</span>(<span class="string">&#x27;.img-row img&#x27;</span>))&#123;</span><br><span class="line">        $imageGalleryLink.<span class="title function_">addClass</span>(<span class="string">&#x27;post-gallery-img&#x27;</span>);</span><br><span class="line">        $imageGalleryLink.<span class="title function_">attr</span>(<span class="string">&#x27;data-fancybox&#x27;</span>, <span class="string">&#x27;gallery&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;rel&#x27;</span>, <span class="string">&#x27;gallery&#x27;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>



<h3 id="修改缩略图"><a href="#修改缩略图" class="headerlink" title="修改缩略图"></a>修改缩略图</h3><p>因为fancybox会自动生成缩略图,但实际上缩略图的src还是原图,所以加载的时候比较慢,这样也会造成资源浪费.所以还是在<code>\next\source\js\utils.js</code>中修改了下下,将缩略图地址转换为原图;</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">wrapImageWithFancyBox</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;.post-body :not(a) &gt; img, .post-body &gt; img, .gallery-page &gt; img&#x27;</span>).<span class="title function_">forEach</span>(<span class="function"><span class="params">element</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">var</span> $image = $(element);</span><br><span class="line">      <span class="keyword">var</span> imageLink = $image.<span class="title function_">attr</span>(<span class="string">&#x27;data-src&#x27;</span>) || $image.<span class="title function_">attr</span>(<span class="string">&#x27;src&#x27;</span>);</span><br><span class="line">      <span class="keyword">var</span> $imageWrapLink = $image.<span class="title function_">wrap</span>(<span class="string">`&lt;a class=&quot;fancybox fancybox.image&quot; href=&quot;<span class="subst">$&#123;imageLink&#125;</span>&quot; itemscope itemtype=&quot;http://schema.org/ImageObject&quot; itemprop=&quot;url&quot;&gt;&lt;/a&gt;`</span>).<span class="title function_">parent</span>(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">      <span class="comment">// 将缩略图src换成原图src</span></span><br><span class="line">      <span class="keyword">var</span> $imageGalleryLink = $image.<span class="title function_">wrap</span>(<span class="string">`&lt;a class=&quot;fancybox fancybox.image&quot; href=&quot;<span class="subst">$&#123;imageLink.replace(<span class="string">&quot;.th.&quot;</span>,<span class="string">&quot;.&quot;</span>)&#125;</span>&quot; itemscope itemtype=&quot;http://schema.org/ImageObject&quot; itemprop=&quot;url&quot;&gt;&lt;/a&gt;`</span>).<span class="title function_">parent</span>(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">      <span class="keyword">if</span> ($image.<span class="title function_">is</span>(<span class="string">&#x27;.post-gallery img&#x27;</span>)) &#123;</span><br><span class="line">        $imageWrapLink.<span class="title function_">addClass</span>(<span class="string">&#x27;post-gallery-img&#x27;</span>);</span><br><span class="line">        $imageWrapLink.<span class="title function_">attr</span>(<span class="string">&#x27;data-fancybox&#x27;</span>, <span class="string">&#x27;gallery&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;rel&#x27;</span>, <span class="string">&#x27;gallery&#x27;</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> ($image.<span class="title function_">is</span>(<span class="string">&#x27;.group-picture img&#x27;</span>)) &#123;</span><br><span class="line">        $imageWrapLink.<span class="title function_">attr</span>(<span class="string">&#x27;data-fancybox&#x27;</span>, <span class="string">&#x27;group&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;rel&#x27;</span>, <span class="string">&#x27;group&#x27;</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $imageWrapLink.<span class="title function_">attr</span>(<span class="string">&#x27;data-fancybox&#x27;</span>, <span class="string">&#x27;default&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;rel&#x27;</span>, <span class="string">&#x27;default&#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 如果是相册页面下的图片 启用fancybox</span></span><br><span class="line">      <span class="keyword">if</span> ($image.<span class="title function_">is</span>(<span class="string">&#x27;.img-row img&#x27;</span>))&#123;</span><br><span class="line">        $imageGalleryLink.<span class="title function_">addClass</span>(<span class="string">&#x27;post-gallery-img&#x27;</span>);</span><br><span class="line">        $imageGalleryLink.<span class="title function_">attr</span>(<span class="string">&#x27;data-fancybox&#x27;</span>, <span class="string">&#x27;gallery&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;rel&#x27;</span>, <span class="string">&#x27;gallery&#x27;</span>);</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure>

<p>这里并不适用所有,因为我的图床是通过Chevereto自建的,在上传图片之后,会给你多个图片格式的链接,包括缩略图\中等图以及原图,他们的格式是酱紫的:</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">原图: xxx<span class="selector-class">.jpg</span></span><br><span class="line">中等: xxx<span class="selector-class">.md</span><span class="selector-class">.jpg</span></span><br><span class="line">缩略图: xxx<span class="selector-class">.th</span>.jpg</span><br></pre></td></tr></table></figure>

<p>所以,只要在相册内容页面的图片地址填入缩略图,然后utils.js中会将<code>th.</code>去掉,变成原图地址,这样点开之后就是原图了.写了一个简单的java来做这件事</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TransUrl</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">		<span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;url.txt&quot;</span>);</span><br><span class="line">		<span class="type">BufferedReader</span> <span class="variable">bis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(fis));</span><br><span class="line"></span><br><span class="line">		List&lt;String&gt; strings = transUrl(bis);</span><br><span class="line">		<span class="keyword">for</span> (String str : strings) &#123;</span><br><span class="line">			System.out.print(str);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> List&lt;String&gt; <span class="title function_">transUrl</span><span class="params">(BufferedReader bis)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">		<span class="type">String</span> <span class="variable">line</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">		List&lt;String&gt; pics = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">		<span class="keyword">while</span> ((line = bis.readLine()) != <span class="literal">null</span>) &#123;</span><br><span class="line">			<span class="type">String</span> <span class="variable">pattern</span> <span class="operator">=</span> <span class="string">&quot;&lt;img.*?&gt;&quot;</span>;</span><br><span class="line">			<span class="type">Pattern</span> <span class="variable">compile</span> <span class="operator">=</span> Pattern.compile(<span class="string">&quot;&lt;img.*?&gt;&quot;</span>);</span><br><span class="line">			<span class="type">Matcher</span> <span class="variable">matcher</span> <span class="operator">=</span> compile.matcher(line);</span><br><span class="line">			<span class="keyword">while</span> (matcher.find()) &#123;</span><br><span class="line">				<span class="type">String</span> <span class="variable">img</span> <span class="operator">=</span> matcher.group();</span><br><span class="line">				pics.add(img);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> pics;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p><a href="https://imgchr.com/">路过图床</a>也可以提供这种多格式链接,同时免费注册用户可以无限传图,对于小用户来说很棒啦,完全够用.</p>
<h3 id="页面布局"><a href="#页面布局" class="headerlink" title="页面布局"></a>页面布局</h3><p>页面布局采用flex,这里有一篇详细介绍的</p>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/25303493">https://zhuanlan.zhihu.com/p/25303493</a></li>
</ul>
<p>简单来说,flex布局会让你的div按照你的需求,从左到右从上到下依次排列,同时还可以按照指定方式进行对齐;</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*gallery*/</span></span><br><span class="line"><span class="selector-class">.gallery-page</span> &#123;</span><br><span class="line">	<span class="attribute">margin-top</span>: -<span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.gallery-column</span>,</span><br><span class="line"><span class="selector-class">.img-row</span> &#123;</span><br><span class="line">	<span class="attribute">display</span>: flex;</span><br><span class="line">	<span class="attribute">flex-direction</span>: row ;</span><br><span class="line">    <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">    <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.img-row</span> <span class="selector-tag">a</span>,</span><br><span class="line"><span class="selector-class">.gallery-column</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">	<span class="attribute">border-bottom</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.gallery-item</span> &#123;</span><br><span class="line">	<span class="attribute">margin-bottom</span>: -<span class="number">50px</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.gallery-item</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">	<span class="attribute">margin</span>: -<span class="number">25px</span> auto -<span class="number">10px</span>;</span><br><span class="line">	<span class="attribute">max-width</span>: <span class="number">50%</span>;</span><br><span class="line">	<span class="attribute">text-align</span>: center;</span><br><span class="line">	<span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">	<span class="attribute">color</span>: $black-deep;</span><br><span class="line">	<span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,.<span class="number">3</span>);</span><br><span class="line">	<span class="attribute">border-radius</span>: <span class="number">7px</span>;</span><br><span class="line">	<span class="attribute">border</span>: <span class="number">1px</span> solid $black-deep;</span><br><span class="line">	<span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">8px</span> <span class="number">20px</span> -<span class="number">8px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-class">.gallery-column</span> <span class="selector-tag">a</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">	<span class="attribute">height</span>: <span class="number">250px</span>;</span><br><span class="line">	<span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">	<span class="attribute">object-fit</span>: cover;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">180px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">max-width</span>: <span class="number">767px</span>)&#123;</span><br><span class="line">	<span class="selector-class">.gallery-item</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">		<span class="attribute">min-width</span>: <span class="number">75px</span>;</span><br><span class="line">		<span class="attribute">font-size</span>: <span class="number">13px</span>;</span><br><span class="line">	&#125;</span><br><span class="line">    <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">150px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="另外"><a href="#另外" class="headerlink" title="另外"></a>另外</h3><p>如果嫌麻烦的话,图片直接放博客静态文件就好了,github暂时速度还是可以的,也不用担心流量问题;</p>
<p>记录的很简陋,因为只要自己能看懂 - - ,到时候动手修改还能记起来改哪里- -</p>
<p>具体的还是请参考:</p>
<p><a href="https://co5.me/2018/181112-gallerry2.html">css+markdown 实现 hexo 相册【进阶篇】</a></p>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>Next</tag>
        <tag>Hexo</tag>
        <tag>HTML/CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>python爬取网站图片</title>
    <url>//2016/11/10762/</url>
    <content><![CDATA[<blockquote>
<p>爬虫小练习。看妹子 ( ͡° ͜ʖ ͡°)</p>
</blockquote>
<span id="more"></span>

<h3 id="主要步骤："><a href="#主要步骤：" class="headerlink" title="主要步骤："></a>主要步骤：</h3><ol>
<li><p>获取网页地址，找到图片地址所在标签</p>
</li>
<li><p>用beautifulsoup解析出图片实际地址以及图片标题</p>
</li>
<li><p>分析网页页面逻辑，找出最终页码</p>
</li>
<li><p>写入循环，在每页将图片写入到本地</p>
</li>
</ol>
<h3 id="主要代码"><a href="#主要代码" class="headerlink" title="主要代码"></a>主要代码</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">start_html = requests.get(baseUrl, headers= headers)</span><br><span class="line">content = start_html.content</span><br></pre></td></tr></table></figure>
<p>这里用.content是为了避免网页编码和python编码不同而导致中文乱码问题，各个网站的编码都不一样，有些事utf-8,有些事GBK，还有其他的。这里可以避免编码影响。</p>
<p>按F12，检查图片地址所在标签，见下图<br><img data-src="https://picsshine.oss-cn-shenzhen.aliyuncs.com/blogpics/blog-20170610-%E9%A1%B5%E7%A0%81.png" alt="图片地址"><br>右键-&gt;copy selecter，可以看到，图片所在标签为 </p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &gt; <span class="selector-tag">div</span><span class="selector-class">.ui-main</span> &gt; <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child</span>(<span class="number">9</span>) &gt; <span class="selector-tag">div</span>.mala-text</span><br></pre></td></tr></table></figure>
<p>所以在beautifulsoup中图片地址选择可以写成</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">img_url = img_soup.find(<span class="string">&#x27;div&#x27;</span>, class_=<span class="string">&#x27;ui-main&#x27;</span>).find_all(<span class="string">&#x27;img&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>可以找出此页面所有img标签。同理可以找到图片标题。但是此处找到的是所在标签，打印出来的是</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">&lt;img <span class="attribute">alt</span>=<span class="string">&quot;美女&quot;</span> <span class="attribute">src</span>=<span class="string">&quot;http://wx4.sinaimg.cn/mw600/680f28e6gy1ffi9650prlj20dw0iidj6.jpg&quot;</span> <span class="attribute">style</span>=<span class="string">&quot;width: 350px; height: 466px;&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;a <span class="attribute">href</span>=<span class="string">&quot;/miss/7159.html&quot;</span>&gt;美女&lt;/a&gt;</span><br></pre></td></tr></table></figure>
<p>所以声明一个新的变量来提取图片地址，同理得到标题</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">imgs = img_url[<span class="string">&#x27;src&#x27;</span>] <span class="comment">#图片地址</span></span><br><span class="line">name = titles.tet_text()</span><br></pre></td></tr></table></figure>
<p>最后，找到页码标签，<br><img data-src="https://picsshine.oss-cn-shenzhen.aliyuncs.com/blogpics/blog-20170610-%E5%9B%BE%E7%89%87%E5%9C%B0%E5%9D%80.png" alt="页码"><br>可以看到末页标签是在page类下的最后一个，所以我们可以用</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">maxPages = soup.find(<span class="string">&#x27;div&#x27;</span>,class_=<span class="string">&#x27;page&#x27;</span>).find_all(<span class="string">&#x27;a&#x27;</span>)[-<span class="number">1</span>][<span class="string">&#x27;href&#x27;</span>]</span><br><span class="line">maxpage0 = re.findall(<span class="string">&#x27;\d+&#x27;</span>,maxPages)</span><br><span class="line"><span class="comment">#最大页面值</span></span><br><span class="line">maxpage = maxpage0[<span class="number">0</span>] <span class="comment">#最终页码 值类型为int</span></span><br></pre></td></tr></table></figure>
<p>soup找到的结果为一个数组，所以我们还要处理一下得到一个数字。</p>
<p>最后，图片的写入以及文件夹的创建。因为每一页都有八张图（最后一页不一定，因此页面循环时不要循环到最后一页），所以每一页循环八次获取图片。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">path = <span class="built_in">str</span>(page)</span><br><span class="line"><span class="comment">#如果文件夹已经存在，再次创建会出错，所以这里用了一个if循环</span></span><br><span class="line"><span class="keyword">if</span> os.path.exists(<span class="string">&#x27;D:\meizitu\\&#x27;</span>+path):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;文件夹已存在&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    os.makedirs(os.path.join(<span class="string">&quot;D:\meizitu&quot;</span>,path)) <span class="comment">#创建文件夹</span></span><br><span class="line">os.chdir(<span class="string">&quot;D:\meizitu\\&quot;</span>+path)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">8</span>):</span><br><span class="line">    name = titles[i].get_text()  <span class="comment">#图片标题</span></span><br><span class="line">    imgs = img_url[i][<span class="string">&#x27;src&#x27;</span>]</span><br><span class="line">    img = requests.get(imgs,headers=headers)</span><br><span class="line">    <span class="comment">#因为图片类型主要是JPG和GIF两种，所以这里也写一个if选择</span></span><br><span class="line">    <span class="keyword">if</span> imgs[-<span class="number">3</span>:] == <span class="string">&quot;gif&quot;</span>:</span><br><span class="line">        f = <span class="built_in">open</span>(name+<span class="string">&#x27;.gif&#x27;</span>,<span class="string">&#x27;ab&#x27;</span>)</span><br><span class="line">        f.write(img.content)</span><br><span class="line">        f.close()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        f = <span class="built_in">open</span>(name + <span class="string">&#x27;.jpg&#x27;</span>, <span class="string">&#x27;ab&#x27;</span>)</span><br><span class="line">        f.write(img.content)</span><br><span class="line">        f.close()</span><br></pre></td></tr></table></figure>

<p>最终代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># _author_:shineee</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">headers = &#123;<span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/22.0.1207.1 Safari/537.1&quot;</span>&#125;</span><br><span class="line"><span class="comment">##浏览器请求头（大部分网站没有这个请求头会报错、请务必加上）</span></span><br><span class="line">baseUrl = <span class="string">&#x27;http://www.qiubaichengren.com&#x27;</span></span><br><span class="line">start_html = requests.get(baseUrl, headers= headers)</span><br><span class="line"><span class="comment">##将原网页内容提取出来。避免编码不同造成中文乱码</span></span><br><span class="line">content = start_html.content</span><br><span class="line"><span class="comment">##声明soup变量，然后找出图片地址</span></span><br><span class="line">soup = BeautifulSoup(content, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"><span class="comment">#末页</span></span><br><span class="line">maxPages = soup.find(<span class="string">&#x27;div&#x27;</span>,class_=<span class="string">&#x27;page&#x27;</span>).find_all(<span class="string">&#x27;a&#x27;</span>)[-<span class="number">1</span>][<span class="string">&#x27;href&#x27;</span>]</span><br><span class="line">maxpage0 = re.findall(<span class="string">&#x27;\d+&#x27;</span>,maxPages)</span><br><span class="line"><span class="comment">#最大页面值</span></span><br><span class="line">maxpage = maxpage0[<span class="number">0</span>] <span class="comment">#因为正则表达式出来的是数组，所以这里提取数组中的第一个数，也是唯一一个</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> page <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">5</span>):<span class="comment">#这里5可以改成maxpage，但是太多了- -八百多页呢，喜欢的话自己可以慢慢等。。</span></span><br><span class="line">    page_url = baseUrl + <span class="string">&#x27;/&#x27;</span> + <span class="built_in">str</span>(page) + <span class="string">&#x27;.html&#x27;</span></span><br><span class="line">    img_html = requests.get(page_url,headers= headers)</span><br><span class="line">    img_soup = BeautifulSoup(img_html.content,<span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">    img_url = img_soup.find(<span class="string">&#x27;div&#x27;</span>, class_=<span class="string">&#x27;ui-main&#x27;</span>).find_all(<span class="string">&#x27;img&#x27;</span>)</span><br><span class="line">    titles = img_soup.select(<span class="string">&#x27;div[class=&quot;mtitle&quot;]&#x27;</span>)  <span class="comment">##获取图片标题</span></span><br><span class="line">    path = <span class="built_in">str</span>(page)</span><br><span class="line">    <span class="keyword">if</span> os.path.exists(<span class="string">&#x27;D:\meizitu\\&#x27;</span>+path):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;文件夹已存在&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        os.makedirs(os.path.join(<span class="string">&quot;D:\meizitu&quot;</span>,path)) <span class="comment">#创建文件夹</span></span><br><span class="line">    os.chdir(<span class="string">&quot;D:\meizitu\\&quot;</span>+path)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">8</span>):</span><br><span class="line">        name = titles[i].get_text()  <span class="comment">#图片标题</span></span><br><span class="line">        imgs = img_url[i][<span class="string">&#x27;src&#x27;</span>]</span><br><span class="line">        img = requests.get(imgs,headers=headers)</span><br><span class="line">        <span class="keyword">if</span> imgs[-<span class="number">3</span>:] == <span class="string">&quot;gif&quot;</span>:</span><br><span class="line">            f = <span class="built_in">open</span>(name+<span class="string">&#x27;.gif&#x27;</span>,<span class="string">&#x27;ab&#x27;</span>)</span><br><span class="line">            f.write(img.content)</span><br><span class="line">            f.close()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            f = <span class="built_in">open</span>(name + <span class="string">&#x27;.jpg&#x27;</span>, <span class="string">&#x27;ab&#x27;</span>)</span><br><span class="line">            f.write(img.content)</span><br><span class="line">            f.close()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;第&#x27;</span>+<span class="built_in">str</span>(page) +<span class="string">&#x27;页写入完成&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;写入完毕。&#x27;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>代码</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>东莞七日</title>
    <url>//2017/07/seven-days-in-dongguan/</url>
    <content><![CDATA[<p>到东莞已经一周。一直很懒，日记都不常写了。</p>
<p>29号早早起来收拾了好久，什么能带的全带上了，好在东莞远，若是在武汉，我估计我会把整个宿舍搬空，一张纸都不剩。</p>
<p>走的时候还好好的，已经送走了那么多人好像也没觉得有什么，散伙饭吃的喝的都好，不说离别伤感，尽是祝前程道未来。也好</p>
<span id="more"></span>

<p>到东莞的高铁五个小时，自入岭南，风景就大不一样了。山变了，树变了，连云都变了。洲哥说这边天都更蓝了，我说兄弟你可拉倒吧别聊爆了。</p>
<p><img data-src="https://pic.sikie.wang/images/2019/10/08/cloud.png" alt="cloud.png"></p>
<p>东莞地铁人不是那么多，两站之间离得比较远。下地铁之后拖着行李箱慢慢走到公司，不得不说东莞给我的第一印象非常好，我就喜欢宽宽的马路，自行车道都有标识而且在上面，很安全。到的那天刚好中午下过雨，下午天晴，空气温度都很棒。</p>
<p>入住，整理，出门，觅食。公司周围万达、沃尔玛还有其他商区都挺近，骑着单车晃悠悠的荡着很惬意，如果不用流那么多汗的话(lll￢ω￢)。听着过往路人说着粤语，才会让你更加感觉到身在异乡。吃着口味奇淡啥菜都能蘸酱油的午饭时，才会觉得芝麻酱真是个好东西。</p>
<p>一切都很陌生，一切都很新奇，好在有人陪。会有新的生活，新的朋友，新的身份。从不畏惧新环境，只是担心自己不去接受新的自己。</p>
<p><img data-src="https://pic.sikie.wang/images/2019/10/08/clid.png" alt="clid.png"></p>
<p>在分公司三天的短暂培训结束，没有想象中那般严厉或者让人无法接受。有两位老总的话倒是让我很受触动，尤其开朝元老讲的，不讲政治正确，实事求是，又平易近人。听完之后对这个行业这个职业多一份理解和接受，少了些许不安和疑惑。然事事实实虚虚虚虚实实，他讲的生活未必是你的生活，还是要体验之后才能更加确认。</p>
<p>过两天要参加省公司的培训，听说挺严的，考核不合格还会被放弃，然而我只关心那边伙食好不好，，，</p>
<p>长路漫漫，不知能走多远。</p>
<p>那就风雨兼程吧。</p>
]]></content>
      <categories>
        <category>闲谈</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>关于绑定github pages二级域名</title>
    <url>//2016/10/github-pages-secend-name/</url>
    <content><![CDATA[<p>最近在用Hexo配置好博客的<a href="http://blog.shineee.site/">主页面</a>后，又想来倒持一下来弄个好看的真·主页。后来在各个Hexo的主题下面，看到了<a href="https://github.com/iissnan">@iissnan</a>的<a href="http://iissnan.com/">主页</a>。很好看，就去clone下来了，稍微稍微加工了一下。</p>
<span id="more"></span>

<p>因为github.io绑定的域名是blog.shineee.site。所以新建了一个repo然后在主页面新建CNAME指向真主页域名shineee.win就可以了。</p>
<p>在dnspod解析里面，加上一个blog的指向github.io就ok。</p>
]]></content>
      <categories>
        <category>代码</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>别离</title>
    <url>//2017/08/sayonara/</url>
    <content><![CDATA[<p>最近一段时间天气挺好，晚上吹吹风好凉快。</p>
<span id="more"></span>

<p>从岗前培训班回来已经一个月多了，又有一个月没更新公众号了╮(╯▽╰)╭ </p>
<p>时间好像错乱了一样，记不清一个月发生的事情哪个在前哪个在后。大概还是轮岗做的事情太少，想得太多。这一个月发生了很多事情，虽然可能平平淡淡没太多亮点，但是现在坐下来想想还是挺多值得回味的啊。</p>
<p>以前呢，老想着毕业之后找一个普普通通的工作，当个普普通通的小白领，在普普通通的城市的一栋普普通通的写字楼里上普普通通的班。电视剧小说还有知乎看的太多可能就这个想法吧哈哈哈哈…..</p>
<p>现在也没差，毕竟还没有正儿八经的到岗正式上班，忙的日子还在后面呢。看其他兄弟公司的同部门的兄弟每个周末都跑跑跑，自己还是要好好珍惜现在所剩无几的可以浪的时光啊。</p>
<p>好像跑题了。。</p>
<p>上周去了深圳看了一场电影，回来在深圳北的检票口遇见一对情侣分别。看起来好像也是刚工作的毕业生，两人在快速通道的检票口依依不舍，男生要走女孩要留，一个默默流泪一个轻轻抚慰。单身狗的我在旁边看的心里满是感动，毕竟第一次在火车站近距离看到分离。</p>
<blockquote>
<p>悲莫悲兮生别离，乐莫乐兮新相知。</p>
</blockquote>
<p>别离别离，说到底还是不想离。毕业季老这样，俗套而又实实在在真真切切的情感。人嘛，就是这样咯。</p>
<p>一个月前，和刚认识的未来老总们说再见；<br>两个月前，和相识四年的老铁们说再见，和不再回来的学生时光说再见。</p>
<p>今天是2017年8月26日，B站首播《君の名は。》，一年前的8月26日电影在日本上映，我查了一下电影票，去年的12月2日，当时一个人去的光谷天地看的电影，后来又和少爷一起去看了一遍。都记不清那么久远的事情了。记不得了</p>
<blockquote>
<p>伤感的话不用说<br>忧愁的泪不用流<br>请往前走<br>不要回头</p>
</blockquote>
<p>又跑题了</p>
<p>以后常有的事情</p>
<blockquote>
<p>人生如逆旅，我亦是行人。</p>
</blockquote>
<p>很高兴认识你们。</p>
]]></content>
      <categories>
        <category>闲谈</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>炮弹要飞多远才会停止</title>
    <url>//2016/10/Iamyoungerthanthatnow/</url>
    <content><![CDATA[<p>前日，瑞典学院授予 Bob Dylan 诺贝尔文学奖，表彰其“在美国歌曲传统中创造了新的诗歌表达”(having created new poetic expressions within the great American song tradition.)。</p>
<p><img data-src="https://pic.sikie.wang/images/2019/10/08/timgimagequality80sizeb9999_10000sec1570532662126die7f92806f16b84faef0c119151666f04imgtype0srchttp3A2F2Fmediad.publicbroadcasting.net2Fp2Fshared2Fnpr2Fstyles2Fx_large2Fnprshared2F2014122F369685020.jpg" alt="bob2.jpg"></p>
<p>Bob Dylan (1941.5.24－)，美国唱作人、艺术家和作家。从1961年发布首张专辑至今，迪伦在流行音乐界和文化界起到的影响已超过50年。他的大多数著名作品都来自1960年代的反抗民谣，也被广泛认为是当时<strong>美国新兴的反叛文化的代言人</strong>，尽管他否认了这一点。</p>
<span id="more"></span>

<p>高中的时候，政治老师在课堂上给我们播放了关于 Bob Dylan 的一期凤凰的访谈节目–《环球人物周刊》，那时高一，2011年，正值 Bob Dylan 在华举行演唱会，那是他首次在华登台演出。老爷子那时都70岁了，一把吉他一把口琴。片头的自我介绍深入人心</p>
<blockquote>
<p>我不想引领时代，却是美国民权运动的代言人；</p>
<p>我不是作家，却屡次获诺贝尔文学奖提名；</p>
<p>所有堆积如山的头衔都不是我，</p>
<p>我有且只有一个名字—-Bob Dylan</p>
</blockquote>
<hr>
<p>1963年8月28日，马丁路德金在华盛顿林肯纪念堂发表了撼动世界的演讲《I Have a Dream》。之后， Bob Dylan 在浩瀚的人群中演唱了他刚创作不久的歌曲《Blowin’ in the Wind》。他与马丁路德金一样，发出了时代的强音。</p>
<p><img data-src="http://mmbiz.qpic.cn/mmbiz_jpg/hQibibx5uKmd9LaBMIvOqCc0YP6NMUcRY0mRo1yHhFErPIrRbwOIx6xliaicp5ys4ic02Ou03FOAJGfU9nAEyX2jyxw/640?tp=webp&wxfrom=5&wx_lazy=1&wx_co=1" alt="img"></p>
<p><img data-src="http://mmbiz.qpic.cn/mmbiz_png/yqVAqoZvDibH6wIACp4pdkzLJA0cfQiazZpkBpT6TQAO2ghO1yHrBtUibGSo8Rjn4oprohDHvQrTrgbkicGcHtic0icw/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1" alt="img"></p>
<blockquote>
<p>如果说猫王给摇滚以形式，那么 Bob 给摇滚以灵魂。</p>
</blockquote>
<p>相比村上春树、阿多尼斯等热门得奖候选作家来说，文学界对于鲍勃·迪伦得奖颇感意外，但这次并非实鲍勃·迪伦首次与诺奖触电。</p>
<p>早在1996年，戈登·鲍尔代表竞选委员会为鲍勃·迪伦正式提名诺贝尔文学奖，他向媒体宣读艾伦·金斯伯格的推荐信：“虽然他作为一个音乐家而闻名，但如果忽略了他在文学上非凡的成就，那么这将是一个巨大的错误。事实上，音乐和诗是联系着的，迪伦先生的作品异常重要地帮助我们恢复了这至关重要的联系。”</p>
<p><img data-src="https://pic.sikie.wang/images/2019/10/08/comment.png" alt="comment.png"></p>
<p>文学是面向每个人的内心，还是面向看上去更大写的现实，这是诺贝尔文学奖历史上的永恒困境。无论怎样，Bob Dylan 的成就获奖并不过分。虽然村上春树可能。。。。并不伤心，因为他也是迪伦的粉丝，在他的作品里，很多地方都体现出了他对这位老者的热爱。所以迪伦获奖，作为粉丝的他，心底里应该也是十分高兴的吧。</p>
<p><img data-src="https://pic.sikie.wang/images/2019/10/08/bobdylan.png" alt="bobdylan.png"></p>
<p>昔日我曾老去，</p>
<p>如今我风华正茂。</p>
<p>愿迪伦，永远年轻。</p>
<blockquote>
<p>遇见她就像是走进了《一千零一夜》<strong>。</strong></p>
<p><strong>她的微笑照亮了一整条熙熙攘攘的街。</strong></p>
<p><strong>她就像是罗丹的雕塑被赋予生命。</strong></p>
<p>——迪伦这样描述对初恋情人苏西的一见钟情。</p>
</blockquote>
]]></content>
      <categories>
        <category>闲谈</category>
      </categories>
      <tags>
        <tag>生活</tag>
        <tag>Bob Dylan</tag>
      </tags>
  </entry>
  <entry>
    <title>常用的Chrome拓展</title>
    <url>//2016/10/good-chrome-extensions/</url>
    <content><![CDATA[<p>Chrome作为除IE之外大佬级别的存在,对于程序猿来说是不可缺失的.虽然它吃内存,耗电大,但是人们选择它必然有足够的理由.于我而言,更好的拓展性就是最吸引我的.</p>
<p>不得不说,google的拓展插件让浏览器不再仅仅是浏览器,随着人们日常生活的需求增加,浏览网页也不再是单纯的浏览网页了– 好怪异的话啊(</p>
<p>工具只是工具,更好的使用工具才能让工具发挥出应有的潜力.简单讲讲我经常用的几款插件</p>
<span id="more"></span>



<h2 id="谷歌访问助手"><a href="#谷歌访问助手" class="headerlink" title="谷歌访问助手"></a>谷歌访问助手</h2><p><a href="https://github.com/haotian-wang/google-access-helper">https://github.com/haotian-wang/google-access-helper</a></p>
<p>不必多说.</p>
<h2 id="crxMouse-Chrome-Gesture"><a href="#crxMouse-Chrome-Gesture" class="headerlink" title="crxMouse Chrome Gesture"></a>crxMouse Chrome Gesture</h2><p>​        一款手势插件，十分方便快捷，当然某些国产浏览器自带手势功能。这个插件功能非常多，除了基本的前进后退关闭等功能，还有额外的拖曳编辑等，并支持配置的导入导出以及云同步。</p>
<h2 id="Google翻译"><a href="#Google翻译" class="headerlink" title="Google翻译"></a>Google翻译</h2><p>官方出品，支持页面划词翻译和整个页面翻译。之前用有道，但是每次都要开软件，而且很不人性化，划词之后直接翻译了，不知道现在改了没有。这个插件在选词之后会出现一个图标，点击即可翻译。并且可以自选语言（当然啦，机翻嘛，效果你懂就好）</p>
<h2 id="Onenote-Web-Clipper"><a href="#Onenote-Web-Clipper" class="headerlink" title="Onenote Web Clipper"></a>Onenote Web Clipper</h2><p>微软自家的插件，如果你是Onenote用户，这个插件必不可少。因为在 Microsoft Edge 中已经集成了Onenote的手机功能，在Edge中你可以直接将网页发送到Onenote，而且可以全页面截取，并且可以在上面进行修改编辑。但是Chrome上的插件功能更加全面，不仅支持页面截取，还</p>
<p>甚至可以选中一段文字直接收集发送到Onenote，自带荧光笔</p>
<p>就问你怕不怕咯</p>
<h2 id="uBlock-origin"><a href="#uBlock-origin" class="headerlink" title="uBlock origin"></a>uBlock origin</h2><p>一款高效的网络请求过滤工具，占用极低的内存和 CPU。我用它代替了AdBlock，所以你知道它是做什么的咯。</p>
<p>想必AdBlock，占用内存更小，嗯，主要是这点。。其实功能上都差不多了，现在许多网站（主要是视频网站）都反AdBlock了，虽然广告屏蔽了，但是你得看一段黑屏。尽管如此，也好过让我看那些奇葩页游的广告。(你的时间非常值钱(<em>^_^</em>)</p>
<h2 id="Simple-Undo-Close"><a href="#Simple-Undo-Close" class="headerlink" title="Simple Undo Close"></a>Simple Undo Close</h2><p>相当于一个历史记录，点击之后会看到刚刚关闭的网页，相当于撤销吧。许多国产浏览器也是自带的有</p>
<h2 id="IE-Tab"><a href="#IE-Tab" class="headerlink" title="IE Tab"></a>IE Tab</h2><p>IE作为默认浏览器那么多年，终于也随着Win10 Edge的出现退出了舞台，でも，很多网站是基于ie内核浏览器建立的，要求你使用ie内核的浏览器才能正常工作，比如网银什么的。而且，学校的官网，必须让你用IE，还是IE8.0，这就很伤了。什么年代了你让我去哪儿给你找ie8- -  这个插件在运行之前会自动弹出一个下载，点击保存之后运行就能正常使用了</p>
<h2 id="Extensions-Manager-aka-Switcher"><a href="#Extensions-Manager-aka-Switcher" class="headerlink" title="Extensions Manager (aka Switcher)"></a>Extensions Manager (aka Switcher)</h2><p>管理插件的插件。很可能你是个插件达人，下载了好多好多拓展，但是很多你平常都用不到，如果一直开着是十分占内存的，删掉又没必要，所以这款管理插件十分贴人心。简洁明了占内存小，除了管理拓展之外还可以管理Chrome主题。（讲真我每次换以前的主题都要重新到WebStroe搜索真的好烦躁。。）</p>
<p><img data-src="https://pic.sikie.wang/images/2019/10/08/extension.png" alt="extension.png"></p>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>Chrome</tag>
      </tags>
  </entry>
  <entry>
    <title>心有感慨·夏</title>
    <url>//2019/07/summer-2019/</url>
    <content><![CDATA[<p>夏天还是如印象中的一样，五点刚果天会慢慢睁眼，吃个饭会汗流浃背，午觉久了会昏昏沉沉，八九点搬个躺椅在室外乘凉看月亮看星星（如果有的话）。</p>
<span id="more"></span>
<p>生活气是一个说起来有点抽象，但是讲出来呢，你又能get到具体点的那种词</p>
<blockquote>
<p>盖人家每日不可阙者，柴米油盐酱醋茶。——宋 吴自牧《梦粱录·鲞铺》</p>
</blockquote>
<p>所以住的地方一定要有厨房，偶尔做做饭，会让日子更有味道。因为你要去买菜，去超市或者菜市场是最让我感受「生活」的时候，推个小车或者拧着个小布袋子，看今天的白菜新不新鲜，挑挑拣拣，逢着超市打折就会很开心，其实也没省几毛钱，但是就是感觉很赚。</p>
<p>然后洗菜，做饭，吃完，收拾碗筷，洗洗刷刷，躺倒沙发上喝一口茶，打开电视看看新闻电影；或者天气好跟你去广场散步，看放学的小孩儿们玩各式各样的游戏，看一旁的家长们坐着聊天，看远处的大爷大妈们随着低音炮的轰轰声翩翩起舞。不久的以后，我们也会成为他们的一员，生活也是个轮回，只是大家的圈子不一样。</p>
<p>转眼2019已经过去了一半多，半年多好像真的什么事儿都没做，其实想想也确实什么都没做。过完年辞职，旅游，工作，学习。生活并没有跟想象中那般按部就班的进行，多一点点意外，少一点点惊喜。心里其实倒还有点期待，曾经想做的事情终究要成为现实，随之而来的就是那丢丢小惶恐，兴趣变成了工作究竟会成什么样子呢。平常心啦平常心，反正都是围城，享受生活就好。</p>
<p>说起『围城』，想起过年回家在高铁上遇到的小师姐。在虎门上车，抱着本《围城》慢慢看，到了广州上来了个小姐姐坐在旁边，弄得我有点小紧张。</p>
<blockquote>
<p>你在看《围城》啊，这是我最喜欢的书，读了几遍了。</p>
</blockquote>
<blockquote>
<p>啊对啊，还是高中时候看过，都快忘了，没事拿出来看看打发时间。</p>
</blockquote>
<p>然后就有一搭没一搭的聊着，居然，她也在武汉上的大学，还就是小破财的会院，跟我同年同月，比我早上学所以比我大一届，在深圳的一个咨询公司上班，家在哪儿哪儿。后来又聊了一些，工作啊，她还拿出电脑在学习，看着满屏英文的PPT我有点慌，毕竟她说的工作我都听不懂，感觉很吊</p>
<p><img data-src="https://pic.sikie.wang/images/2019/10/08/ganga.png" alt="ganga.png"></p>
<p>中间她还解了几个工作电话，想来所有的社畜都一样啊，在哪里都离不开工作，于是看了看手机的刚发消息的微信群，右上角点了删除。。</p>
<p>五个小时的车程还是长啊，临到车站目送她下车，不知道她的名字没有她的微信，其实我连她长什么样都没有记住😂</p>
<p>人生如逆旅，希望多遇到几个有趣的同行人，听他讲看到的风景遇到的人经历的故事，到站了就挥手再见。旅途漫长，风景会很多。就像利群的老广告说的</p>
<p>人生就像一场旅行，不在乎目的地，在乎的是沿途的风景，以及看风景的心情。</p>
<p>明天就7月22号了，三伏天过完一伏，夏天好像也过了三分之一了。一天天的按部就班，只是还是不知道今后要去哪里。计划总是赶不上变化，一条微信一个电话一张车票，旅途的风景就又不一样了呀。</p>
<p>早睡不一定能够早起，昨天十点多就上床睡觉，今天还是八点半才醒过来，也可能是前天睡太差，一直做梦，也不知道梦到什么了。</p>
<p>昨天去了医院，医院真是个无论何时人都超多的地方，也是我最不愿意去的地方。给我就诊的医生小姐姐真好看，又年轻，用的居然还是锤子的Pro2S，真难得。花了189去检查，然后开了个9块5毛7的膏子给我，让我注意休息不要熬夜</p>
<p>也好，说明我的脸并没什么大问题的，十块钱不到就能救回来。</p>
]]></content>
      <categories>
        <category>闲谈</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>心有感慨·立秋</title>
    <url>//2019/08/autumnishere/</url>
    <content><![CDATA[<p>今日立秋，早上起来吹吹风很舒服，昨天没有一直开风扇，开了空调，好像一直被风吹会头疼。</p>
<span id="more"></span>

<p>醒来喉咙痛，也没有感冒的迹象，不晓得啥子原因。</p>
<p>喉咙疼的很尴尬，你咽口水会疼，喝水也会疼，不舒服的让你不断地去咽口水不断地去喝水然后不断的刺激你的神经。</p>
<p>就像伤口结疤一样，明知道不可以，还是要去抠抠。</p>
<p>人多半是这样吧，其实只要不去想，脑子都不会在意疼不疼，那儿轮得到你来管。</p>
<p>所以啊，有什么治嗓子的好办法？</p>
<h2 id="一叶知秋"><a href="#一叶知秋" class="headerlink" title="一叶知秋"></a>一叶知秋</h2><p>落叶确实多了起来，早上再南湖大道看到有工人拿着类似大型吹风机的东西在行道树下面把叶子吹出来扫走，昨天暴雨也落了不少叶子。</p>
<p>隔壁楼的一层大厅是一个羽毛球训练馆，每天中午下午都有不知道是不用上班还是提前下班的同志们在那里打球。当然小孩子是最多的，从暑假第一天开始，每天都有大大小小的孩子训练，老刻苦了。</p>
<p>但是不得不说，训练还是很棒的，四五岁（真的很小，估计最小的就三岁多）的小姑娘打的比我还好，一招一式。</p>
<p>从小都没啥爱好特长的我很羡慕，也不是没有机会，只是好像很难去坚持一件事情，大概是没那么热爱吧。</p>
<p>昨天在电梯碰到一对小情侣遛猫的，长这么大第一次，见着人拉着根绳子遛猫，还是一直老肥老肥的猫🐱，我也不知道啥品种，咱也不敢问。</p>
<p>倒是记得很清楚，小时候在看乌龙院四格漫画，里面那只叫墨汁的猫就被大师兄和小师弟牵出去遛过。<br><img data-src="https://pic.sikie.wang/images/2020/03/15/640.jpg" alt="乌龙院-溜猫"></p>
<p>还是小学看的漫画啊，到现在都记忆犹新，回头有时间看看乌龙院大长篇吧。</p>
<p>那时候不吃饭攒点钱买五块钱一本的单行本，还有附赠的卡片，结果后来全被弟弟们拿去扔了，就再也不看了。</p>
<p>还有两个月，开始倒计时了，一周又晃晃悠悠过去了，听理论的东西要花很多精力让自己去听进去，偏偏面试理论的东西会问的特别多，到了实际工作又不怎么用。</p>
<p>还是要好好学习啊小伙子</p>
]]></content>
      <categories>
        <category>闲谈</category>
      </categories>
      <tags>
        <tag>autumn</tag>
      </tags>
  </entry>
  <entry>
    <title>心有感慨·长大</title>
    <url>//2019/08/growupisbad/</url>
    <content><![CDATA[<p>这一段内容并没有什么实质内容，只是想吐槽一下，周四（也就是立秋）这个框框还是VIP免费的今天就免费了，啧啧啧，秋天刚到呢为什么就免费了呢，不过还是挺好看的</p>
<span id="more"></span>


<p>今早起来想去西苑吃个热干面，楼下几个大爷坐在公共椅子上日白，太阳还在云层后面，云层在大楼后面。随便来点小风就让人舒服的不得了。只是走到太阳下面就不舒服了，晒得后脖子疼。</p>
<p>我以为收了西苑的摊子，热干面应该还是在的，结果并没有。只有有店面的还在营业，一半，原本摆摊的路停满了车，看不到什么人。失去灵魂。估计恢复要十一月了，不知道还有没有机会再吃一碗热干面。所以要珍惜你吃的每一碗热干面，说不定就是最后一碗了（</p>
<p>最近老聊起长大、变化、巴拉巴拉，其实也才毕业两年，不过刚踏出脚步呀，滚了两圈扑了两层灰。等到有一天你</p>
<p>在泥泞中寸步难行，会不会狠下心来把一旁的小猪猪按在面前爬出来呢的o(￣┰￣*)ゞ</p>
<p>我随便说说的，我也不知道我以后是什么样子。大人只是小孩子的世界里才有的东西，我还是个孩子的(o′┏▽┓｀o) 珍惜小孩子眼里的世界</p>
<p>很多故事的结局一开始就写好了的，只是我们看不到。但是老天爷并不是个好作家，好多好多事情他写不出来，也没有伏笔没有铺垫，想怎么开心怎么来吧，大概他这么想的。</p>
<p>有时候去看一个人做的事，说的话，不要只是看他做的事，说的话。最近静下来想一些事情，翻翻脑子里的旧笔记本，总是想起很多很多小细节。</p>
<p>我们之所以是我们，是因为我们有不同的人生，周围有不同的人，发生了不同的事，做了不同的选择。好好坏坏都有，有些你会忘记有些你会记得。我觉得从来都不曾有什么所谓的同理心，体会不了的就是体会不到。所以跟人说话聊天不要打着一副我tmd真的懂你，你做的事我都能理解。</p>
<p>你TM懂个P啊。</p>
<p>当然不是说就不要去聆听别人理解别人。听就好了。</p>
<p>不要期望别人能够像你一样的去感受你的感受，谁都做不到。</p>
<p>不过我还是会听讲故事，好的开心的，坏的难过的。我可能没法儿记住你讲的每一句话，每一件事，但是我记得说话时的你。</p>
<p>所以，有什么故事就到这里讲吧，我喜欢听故事。</p>
<p>听你讲故事。</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
  </entry>
  <entry>
    <title>愿你我都能被世界温柔相待</title>
    <url>//2017/06/wish-you-be-loved-by-the-world/</url>
    <content><![CDATA[<p>昨天看到电影频道要播《入殓师》，想想好像很早的片子了，初中就说要看一直没看，电视上放的国语版不想听，还是听原声的好。</p>
<p>（以下剧透。不过我觉得没什么可剧透的因为故事很简单，所有的情节台词套路你看到这一幕都能想到下一幕他要说啥做啥┑(￣Д ￣)┍）</p>
<span id="more"></span>

<p>故事其实挺简单，讲述一个成年男子失业之后再就业的问题😶再就业期间由于家人及社会对其新职业产生的种种看法而产生冲突，但是后来男主还是爱上了这份工作并让家人和其他人也逐渐接受了这个职业。嗯就是这么个故事</p>
<p><img data-src="http://mmbiz.qpic.cn/mmbiz/cZV2hRpuAPiaJQXWGyC9wrUzIicibgXayrgbt19vgn5IUAoYunu0ibwhvsG90vMFKhSDubCJuP8sUuA7ice9kXcdN5g/0?wx_fmt=gif&tp=webp&wxfrom=5&wx_lazy=1" alt="天线宝宝"></p>
<p>抛开入殓师这个特殊职业来看这片子剧情就是这样的呀我说的一点问题也没有的。</p>
<p><img data-src="http://mmbiz.qpic.cn/mmbiz/cZV2hRpuAPgHNv7T6fSaya67KiasJ8TjcrEhUCvO7nezUm0MsPPEoPDNnfYEaWjH4OJxYksRBNh09DaNicQOVKgQ/640?wx_fmt=jpeg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1" alt="害怕"></p>
<p>谈到死亡多少有点畏惧，不过生在农村，从小到大，也见了不少葬礼。很小的时候不懂事，只觉得好玩，因为丧礼上会有许多敲锣打鼓的，而且很好听。会有道士来穿着大大的道袍做法事，又跳又唱，就是听不清唱的什么。葬礼的规矩也是特别多，各种主事的，鞭炮、挽联、蜡烛香火…..</p>
<p>家这边依旧是土葬，极少有火化的，一般是在外地去世才会火化，即使火化也会进行土葬。遗体及棺木会在灵堂放几天，到了日子便送上山入土。冬天还好，如果是夏天，遗体放久了就会有味道而且会有苍蝇蚊子之类的，所以现在也有了冰棺，等到要上山时才放到棺木里。</p>
<p>我看过几次躺在里面的人，最近的是我爷爷去世的时候，想想也有六年了。快要合棺的时候才去看最后一眼。就看了一眼，脸上僵僵的，嘴是笑着的。那种笑真的让人觉得冷。</p>
<p>说远了，回到电影吧。搜新闻看到很多人看了这个电影去做入殓师了，觉得很有仪式感很艺术而且也很高薪。电影表现的确实很美，一言一行细致入微，让人觉得躺在那里的仿佛仍旧在世。</p>
<p><img data-src="http://mmbiz.qpic.cn/mmbiz_jpg/hQibibx5uKmdib9FrWEbNTYib8KAelRqIZGYvRbhKMOoDUYBrMpy2nwSxwGlbDknLwjIvpApHppq0uHB2damluRlRQ/640?tp=webp&wxfrom=5&wx_lazy=1&wx_co=1" alt="img"></p>
<p>男主的工作就是为往生者整理妆容，让他们在最后一刻仍旧美丽，在最后一刻依旧被温柔相待。不过在国内，这个职业可能没那么多令人尊敬或者心怀敬意，更多的还是暴利。就跟医院的医生护士一样，生死看惯，麻木与否我不知道，但是对死者的敬意我见得不多。</p>
<p>正值青春年少好像谈这些有点不太合适，不过 了解过死亡，才能更加体会到生的意义吧。</p>
<p>我们每走一步都希望有一个好的结果，得到便成幸福。考试，升迁，结婚，但其实结果连同它得到的过程便连接成了一生。好的你要经过，不好的也是经过。所不同的是，你是否在感谢光明的同时依旧感激黑暗，你是否在难过的时候能一如既往地温暖和柔软？</p>
<hr>
<p>本片获第81届奥斯卡最佳外语奖。由泷田洋二郎执导，主演本木雅弘、广末凉子、山崎努等，音乐则由久石让负责。豆瓣评分8.8，很适合一个人在夜晚慢慢观赏，整个电影平淡而不失色彩，每个人看到的点都会不一样。亲情、工作、婚姻、生死，每一样都能给你不同的看法吧。</p>
<p>愿你我都能被世界温柔相待。</p>
]]></content>
      <categories>
        <category>闲谈</category>
      </categories>
      <tags>
        <tag>生活</tag>
        <tag>电影</tag>
      </tags>
  </entry>
  <entry>
    <title>我的2019</title>
    <url>//2019/12/bye-my2019/</url>
    <content><![CDATA[<p>第一天忘了在做什么了。2018的最后一天倒是记得很清楚。首爆盯着那几个数，到了晚上跟着老杨去旁边的一个海鲜馆子里吃🐟。</p>
<span id="more"></span>

<p>好多鱼，认识的不认识的，味道记不得了,不过那个卤花生还是可以的。</p>
<p>吃完回去继续等，和强哥一起。</p>
<p>太无聊了，反正就和强哥两个人，跑到“作战会议室”，让办公室唯一能制热的空调吹起来，打开电脑，看强哥选的电影。</p>
<blockquote>
<p>《29+1》，香港电影，没仔细跟着看，大概讲的是，迎接和面对30岁到来的生活。</p>
</blockquote>
<p>反正一边看，一边盯着数。到了，零点过了，该有的不该有的都有了，凑够了了事。关机回家。</p>
<p>出了公司后门到了大路上，平日这个点过马路都不用看，那晚上还有来来往往好多车。</p>
<p><img data-src="https://pic.sikie.wang/images/2020/03/15/tempFileForShare_20200315-210943.jpg" alt="2019第一天"></p>
<p>有没有好梦记不得了，总之就这样来到了2019年。</p>
<h2 id="我的2019"><a href="#我的2019" class="headerlink" title="我的2019"></a>我的2019</h2><p>本命年，很糟糕的一年。</p>
<p>从年头到年尾，好像就没遇到什么顺的事儿。</p>
<p>一月递交辞呈，我不喜欢给自己留后路，事情要做了就去做，不然又会不了了之。很多事情也没有想好，反正到了那个点就要去做了。</p>
<p>二月春节，新年，亲人突然病故，生死有命，很多人没了你才知道真的是没了，也有很多感觉是无法言说的。也是那个时候才切身体会到，自己还是个孩子啊，真的什么都做不了，又不想干站着。把一些东西搬过来搬过去，地扫了再扫。人一辈子太短了，还是要好好活着。平安是福。</p>
<p>三月<a href="https://blog.shineee.site/gallery/%E8%A1%8C%E4%B8%9C%E4%BA%AC/">东京游</a>，没有啥计划，走一天吃一天睡一晚，不好不坏。</p>
<p>四月回汉找工作，处处碰壁，后来想才知道，当时的简历和方向错太多，过了节后的求职高峰。还是没啥经验。</p>
<p>接下来的半年，学习，说是充电，实际上也没充多少，总是在最后的时候跳车。就那样了</p>
<p>遇到好的工作好的机会，二选一总是选那个感觉错的那个。就很烦。</p>
<p>颓了一年，感觉是个废人了。</p>
<h2 id="so-2020"><a href="#so-2020" class="headerlink" title="so 2020"></a>so 2020</h2><p>不知道。就想安定下来，有固定的工作和生活。按部就班，做好自己的事，过好自己的生活。</p>
<p>​一晃一个世纪的五分之一过去了，这20年，就对2013这个数印象最深了。大概是因为那一年高考，进了大学，有了新的不一样的生活。</p>
<p>从哪儿看到这么一句话来着</p>
<blockquote>
<p>小时候总觉得一年很长很长，因为那一年占你记忆的五分之一六分之一；如今的一年越来越短，因为他占据你记忆不到二十分之一。</p>
</blockquote>
<p>越往后，你的每一天在你记忆中占得比例会越来越小越来越小。</p>
<p>但不代表这一年，这一天的分量越来越小。对于往后的每一年的每一天，都要怀着最后一年的最后一天的信念去过。</p>
<p>当然啦说起来好简单，反正臣妾做不到。</p>
<h2 id="新年"><a href="#新年" class="headerlink" title="新年"></a>新年</h2><p>每次都说要有新气象，要过不一样的生活，总是踏出去的脚再收回来。</p>
<p>好好过，少点遗憾。</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
  </entry>
  <entry>
    <title>改进的Python贴吧爬虫代码</title>
    <url>//2016/09/python-spiders-improved/</url>
    <content><![CDATA[<p>之前在知乎上面看到许多用Python爬虫做的有趣项目，于是也去学习了一番（入门）。看到很多教程都有关于贴吧爬虫的小例子，于是自己也跟着做了一遍。</p>
<span id="more"></span>

<p>可能是教程时间有点早了，多数都是两三年前的，基本都是用正则表达式来提取关键信息，而且还专门写了一个类来处理各种HTML标签。正则表达式并不难学，但是要真正弄清除却很耗时间，尤其对于新手来说，读懂正则表达式是一件很头疼的事，写出正确的表达式更头疼。</p>
<p>后来学习了requests和beautiful soup两个库，那感觉，仿佛春风拂过泸沽湖,秋雨浸润九寨沟。怎一个<strong>爽</strong>字了得。</p>
<p>关于requests和beautiful soup两个库的教程网上有很多，我看的是<a href="http://cuiqingcai.com/1052.html">崔庆才的博客</a>,内容十分全面，里面的Python爬虫教程也十分适合入门学习。</p>
<p>在其原有的贴吧爬虫代码的基础上，我将提取内容的正则表达式全部替换成了用beautiful soup来获取网页标签内容。</p>
<p>简单来说，Beautiful Soup是python的一个库，最主要的功能是从网页抓取数据。官方解释如下：</p>
<blockquote>
<p>Beautiful Soup提供一些简单的、python式的函数用来处理导航、搜索、修改分析树等功能。它是一个工具箱，通过解析文档为用户提供需要抓取的数据，因为简单，所以不需要多少代码就可以写出一个完整的应用程序。</p>
<p>Beautiful Soup自动将输入文档转换为Unicode编码，输出文档转换为utf-8编码。你不需要考虑编码方式，除非文档没有指定一个编码方式，这时，Beautiful Soup就不能自动识别编码方式了。然后，你仅仅需要说明一下原始编码方式就可以了。</p>
<p>Beautiful Soup已成为和lxml、html6lib一样出色的python解释器，为用户灵活地提供不同的解析策略或强劲的速度。</p>
</blockquote>
<p>上代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#-*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="comment">#__author__shineee</span></span><br><span class="line"><span class="comment">#__time__2016.10__</span></span><br><span class="line"><span class="comment">#__Python27__</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> chain</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tieba</span>:</span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, baseUrl, seeLZ</span>):</span><br><span class="line">		<span class="comment"># base链接地址</span></span><br><span class="line">		<span class="variable language_">self</span>.baseURL = baseUrl</span><br><span class="line">		<span class="comment"># 是否只看楼主</span></span><br><span class="line">		<span class="variable language_">self</span>.seeLZ = <span class="string">&#x27;?see_lz=&#x27;</span> + <span class="built_in">str</span>(seeLZ)</span><br><span class="line">		<span class="comment"># 全局file变量，文件写入操作对象</span></span><br><span class="line">		<span class="variable language_">self</span>.file = <span class="literal">None</span></span><br><span class="line">		<span class="comment">#默认的标题，如果没有成功获取到标题的话则会用这个标题</span></span><br><span class="line">		<span class="variable language_">self</span>.defaultTitle = <span class="string">u&quot;百度贴吧&quot;</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">getPage</span>(<span class="params">self, pageNum</span>):</span><br><span class="line">		<span class="keyword">try</span>:</span><br><span class="line">		<span class="comment"># 构建URL</span></span><br><span class="line">			url = <span class="variable language_">self</span>.baseURL + <span class="variable language_">self</span>.seeLZ + <span class="string">&#x27;&amp;pn=&#x27;</span> + <span class="built_in">str</span>(pageNum)</span><br><span class="line">			response = requests.get(url).text.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">			<span class="comment"># 返回UTF-8格式编码内容</span></span><br><span class="line">			<span class="keyword">return</span> response.replace(<span class="string">&#x27;&lt;br&gt;&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">		<span class="comment"># 无法连接，报错</span></span><br><span class="line">		<span class="keyword">except</span> ValueError <span class="keyword">as</span> e:</span><br><span class="line">			<span class="keyword">if</span> <span class="built_in">hasattr</span>(e, <span class="string">&quot;reason&quot;</span>):</span><br><span class="line">				<span class="built_in">print</span> <span class="string">u&quot;连接百度贴吧失败,错误原因&quot;</span>, e.reason</span><br><span class="line">				<span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">	<span class="comment"># 获取帖子标题</span></span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">getTitle</span>(<span class="params">self, page</span>):</span><br><span class="line">		<span class="comment">#新建soup对象</span></span><br><span class="line">		soup = BeautifulSoup(page)</span><br><span class="line">        <span class="comment">#获取标题</span></span><br><span class="line">		title = unicode(soup.h3.string)</span><br><span class="line">		<span class="keyword">if</span> title:</span><br><span class="line">			<span class="comment"># 如果存在，则返回标题</span></span><br><span class="line">			<span class="comment"># 若文件名中有/符号则替换掉 否则写入文件时会出错</span></span><br><span class="line">			<span class="keyword">return</span> title.replace(<span class="string">&#x27;/&#x27;</span>, <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">		<span class="keyword">else</span>:</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">	<span class="comment"># 获取帖子一共有多少页</span></span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">getPageNum</span>(<span class="params">self, page</span>):</span><br><span class="line">		soup = BeautifulSoup(page)</span><br><span class="line">        <span class="comment">#利用soup的select规则找出帖子总页码数</span></span><br><span class="line">		page = soup.select(<span class="string">&#x27;li[style=&quot;margin-left:8px&quot;]&#x27;</span>)</span><br><span class="line">		<span class="keyword">for</span> ii <span class="keyword">in</span> page:</span><br><span class="line">			nums = ii.get_text()</span><br><span class="line">			<span class="keyword">break</span></span><br><span class="line">		num = re.findall(<span class="string">r&#x27;[0-9]+(?=[^0-9]*$)&#x27;</span>, nums)</span><br><span class="line">		result = <span class="string">&#x27;&#x27;</span>.join(num)</span><br><span class="line">		<span class="keyword">if</span> result:</span><br><span class="line">			<span class="keyword">return</span> result</span><br><span class="line">		<span class="keyword">else</span>:</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">setFileTitle</span>(<span class="params">self, title</span>):</span><br><span class="line">		<span class="comment"># 如果标题不是为None，即成功获取到标题</span></span><br><span class="line">		<span class="keyword">if</span> title <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">			<span class="variable language_">self</span>.file = <span class="built_in">open</span>(title + <span class="string">&quot;.txt&quot;</span>, <span class="string">&quot;w+&quot;</span>)</span><br><span class="line">		<span class="keyword">else</span>:</span><br><span class="line">			<span class="variable language_">self</span>.file = <span class="built_in">open</span>(<span class="variable language_">self</span>.defaultTitle + <span class="string">&quot;.txt&quot;</span>, <span class="string">&quot;w+&quot;</span>)</span><br><span class="line"></span><br><span class="line">	<span class="comment"># 获取每一层楼的内容,传入页面内容</span></span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">getContent</span>(<span class="params">self, page</span>):</span><br><span class="line">		<span class="comment"># 匹配所有楼层的内容</span></span><br><span class="line">		contents1 = []</span><br><span class="line">		contents2 = []</span><br><span class="line">		soup = BeautifulSoup(page)</span><br><span class="line">        <span class="comment">#获取帖子发布时间</span></span><br><span class="line">		time = soup.select(<span class="string">&#x27;div[class=&quot;post-tail-wrap&quot;]&#x27;</span>)</span><br><span class="line">		<span class="keyword">for</span> ii <span class="keyword">in</span> time:</span><br><span class="line">			texts = ii.get_text(<span class="string">&#x27;  &#x27;</span>)</span><br><span class="line">            <span class="comment">#将无用信息去除掉</span></span><br><span class="line">			texts2 = texts.rjust(<span class="number">80</span>).replace(<span class="string">u&#x27;举报  |  侵权举报  有害信息举报  &#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">			contents1.append(texts2 + <span class="string">&#x27;\n&#x27;</span> + <span class="string">&#x27;\n&#x27;</span> + <span class="string">&#x27;-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-&#x27;</span>)</span><br><span class="line">		<span class="comment"># 提取正文内容</span></span><br><span class="line">		items = soup.select(<span class="string">&#x27;cc&#x27;</span>)</span><br><span class="line">		<span class="keyword">for</span> iii <span class="keyword">in</span> items:</span><br><span class="line">			contents2.append(iii.get_text().encode(<span class="string">&#x27;utf8&#x27;</span>).lstrip())</span><br><span class="line">        <span class="comment">#将两个list合并为一个list 重叠合并</span></span><br><span class="line">		contents = <span class="built_in">list</span>(chain.from_iterable(<span class="built_in">zip</span>(contents2, contents1)))</span><br><span class="line">		<span class="keyword">return</span> contents</span><br><span class="line"></span><br><span class="line">	<span class="comment"># 向文件写入每一楼的信息</span></span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">writeData</span>(<span class="params">self, contents</span>):</span><br><span class="line">		<span class="keyword">for</span> item <span class="keyword">in</span> contents:</span><br><span class="line">			<span class="variable language_">self</span>.file.write(item+<span class="string">&#x27;\n&#x27;</span>+<span class="string">&#x27;\n&#x27;</span>+<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">start</span>(<span class="params">self</span>):</span><br><span class="line">		indexPage = <span class="variable language_">self</span>.getPage(<span class="number">1</span>)</span><br><span class="line">		pageNum = <span class="variable language_">self</span>.getPageNum(indexPage)</span><br><span class="line">		title = <span class="variable language_">self</span>.getTitle(indexPage)</span><br><span class="line">		<span class="variable language_">self</span>.setFileTitle(title)</span><br><span class="line">		<span class="keyword">if</span> pageNum == <span class="literal">None</span>:</span><br><span class="line">			<span class="built_in">print</span> <span class="string">&quot;URL已失效，请重试&quot;</span></span><br><span class="line">			<span class="keyword">return</span></span><br><span class="line">		<span class="keyword">try</span>:</span><br><span class="line">			<span class="built_in">print</span> <span class="string">&quot;该帖子共有&quot;</span> + <span class="built_in">str</span>(pageNum) + <span class="string">&quot;页&quot;</span></span><br><span class="line">			<span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">int</span>(pageNum) + <span class="number">1</span>):</span><br><span class="line">				<span class="built_in">print</span> <span class="string">&quot;正在写入第&quot;</span> + <span class="built_in">str</span>(i) + <span class="string">&quot;页数据&quot;</span></span><br><span class="line">				page = <span class="variable language_">self</span>.getPage(i)</span><br><span class="line">				contents = <span class="variable language_">self</span>.getContent(page)</span><br><span class="line">				<span class="variable language_">self</span>.writeData(contents)</span><br><span class="line">				<span class="comment"># 出现写入异常</span></span><br><span class="line">		<span class="keyword">except</span> IOError, e:</span><br><span class="line">			<span class="built_in">print</span> <span class="string">&quot;写入异常，原因&quot;</span> + e.message</span><br><span class="line">		<span class="keyword">finally</span>:</span><br><span class="line">			<span class="built_in">print</span> <span class="string">&quot;写入任务完成&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> <span class="string">u&quot;请输入帖子代号&quot;</span></span><br><span class="line">baseURL = <span class="string">&#x27;http://tieba.baidu.com/p/&#x27;</span> + <span class="built_in">str</span>(raw_input(<span class="string">u&#x27;http://tieba.baidu.com/p/&#x27;</span>))</span><br><span class="line">seeLZ = raw_input(<span class="string">u&quot;是否只获取楼主发言，是输入1，否输入0\n&quot;</span>)</span><br><span class="line">bdtb = Tieba(baseURL, seeLZ)</span><br><span class="line">bdtb.start()</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>相比较正则表达式而言，soup更加清晰明了，也更便于操作。</p>
]]></content>
      <categories>
        <category>代码</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>谈一个遥远的话题</title>
    <url>//2018/09/justwanttotalk/</url>
    <content><![CDATA[<p>最喜欢日剧的一点就是，每个人都能笑得很开心，说话的语调，夸张的表情，莫名的脑洞，中二的对白，睿智（的情节，将生活最平淡无奇的故事讲的那么温暖人心。</p>
<span id="more"></span>

<p>不会有韩剧各种泡菜梗，也不会有国产剧窒息的剧情，日剧讲的故事就是生活中的柴米油盐，但是你闻着看着却像仙境佳肴。一个拥抱就能让你冰冻起来的心被初春的太阳暖着被三月的春风润着。让你知道，无论是什么生活无论是什么角色无论是什么处境，一切都会好起来。</p>
<p>上个周末回家了一趟，来来回回飞了几千里地，也不敢多请几天假。也好，时间长了也有时间长的坏处。从机场回来的路上刷着B站，刚好看到《逃避可耻但有用》上线了，然后就花了一个星期追完了。</p>
<p>昨天迎来了最终回，啊哈，就结束了。</p>
<p>最喜欢日剧的一点就是，每个人都能笑得很开心，说话的语调，夸张的表情，莫名的脑洞，中二的对白，睿智（的情节，将生活最平淡无奇的故事讲的那么温暖人心。不会有韩剧各种泡菜梗，也不会有国产剧窒息的剧情，日剧讲的故事就是生活中的柴米油盐，但是你闻着看着却像仙境佳肴。一个拥抱就能让你冰冻起来的心被初春的太阳暖着被三月的春风润着。让你知道，无论是什么生活无论是什么角色无论是什么处境，一切都会好起来。</p>
<p>故事讲的是，一个大龄职业单身程序猿和一个硕士毕业在家待业女之间进行契约结婚故事（伪）。</p>
<p>契约结婚是一个新概念，粗暴的可以解释为每年过年淘宝就可以看到的租女友服务，契约结婚也是如此（个人理解就是为了某种需求而假结婚，并像对方支付一定劳动费用)。</p>
<p>而与之相对的，就是事实婚姻，即</p>
<blockquote>
<p>双方未在结婚登记机关进行登记而以夫妻名义共同生活的事实。</p>
</blockquote>
<p>在国内的一些未发达地区，这种情况还是非常多的，但随着经济发展，这种情况也在逐渐减少。2001年《婚姻法》解释，事实婚姻为历时遗留问题，自1994年之后的所谓“事实婚姻”均无法律效应，只能被认定为“同居关系”。 </p>
<p> 但是在日本，事实婚【事実婚】是很常见的，而且可以直接申请，更改住民票，不用更改户籍不用改姓，离婚也不会有离婚记录等等，但是无法获得配偶签证、伴侣无法成为法定继承人，也不适用一些专项税率的扣除减免balabala。  </p>
<p><img data-src="https://i.loli.net/2019/09/24/HOcTVWEFkorsufp.png" alt="图-法律婚姻与事实婚所享权利的异同点 "></p>
<p>在日本，事实婚还不属于主流，可以读一读渡边淳一的著作《在一起，不结婚》，讲了啥我也不知道因为我还没看但是搜事实婚出来的最多就是他的这本书豆瓣评分6.7应该不会差到哪里去就当了解风土人情了。 </p>
<hr>
<p>好像从开头绕到婚姻扯了很远，这个改不了的一直是这样想到什么说什么不写稿子就是这样了本来没想写这么多的但是随便写写发现自己想的东西并不是那个样子啊就有点好奇了就要去google一下啊总不能瞎写啊虽然没人看但是还是要打破砂锅问到底有没有啊。  </p>
<p>这个星期知晓了两位高中同学在十一期间举办婚礼的消息，谈不下惊讶，只是有点感慨。今天部门工会活动，去了好多好多个小孩，真是可爱啊。又想起上上月去同事家里，同事妈妈跟我们唠嗑，【抱怨】着现在老一辈的辛苦，又要帮着带孩子又要做家务还得受气~ </p>
<p><img data-src="https://i.loli.net/2019/09/24/HCLuYmOtBcZprES.png" alt="采访某位同学时候的感言"></p>
<p>现在的生活啊，不就是这样。既然想着更好的生活，就要有更多的付出，除了自己，还有家人。明了点就是money的问题，想要自己期望的好的生活，就需要更多的投入（金钱）。当然也是可以退一步，降低自己的生活水平，现在以及以后，看个人意愿吧，可以在大城市奋斗终身搏一席之地，也可以退一步到小城市海阔天空。</p>
<p>一家之言，单身狗的想法总是不一样的，对于有些人来说，婚姻更像是一个动力源，会给你更多power和support，对于有些人来说，婚姻会让你有一个可以依靠可以倾诉的对象，会有一个一直支持你的人在你身边——角色不同，看到的自然也不同。</p>
<p>所以啊，好好生活，生活是真真切切属于你的。无论是否结婚，都要开心健康的生活着。</p>
]]></content>
      <categories>
        <category>闲谈</category>
      </categories>
      <tags>
        <tag>gakki</tag>
        <tag>新垣结衣</tag>
        <tag>结婚</tag>
      </tags>
  </entry>
  <entry>
    <title>送</title>
    <url>//2017/06/say-goodbye/</url>
    <content><![CDATA[<p>昨天看到电影频道要播《入殓师》，想想好像很早的片子了，初中就说要看一直没看，电视上放的国语版不想听，还是听原声的好。</p>
<p>（以下剧透。不过我觉得没什么可剧透的因为故事很简单，所有的情节台词套路你看到这一幕都能想到下一幕他要说啥做啥┑(￣Д ￣)┍）</p>
<span id="more"></span>

<p>故事其实挺简单，讲述一个成年男子失业之后再就业的问题😶再就业期间由于家人及社会对其新职业产生的种种看法而产生冲突，但是后来男主还是爱上了这份工作并让家人和其他人也逐渐接受了这个职业。嗯就是这么个故事</p>
<p>抛开入殓师这个特殊职业来看这片子剧情就是这样的呀我说的一点问题也没有的。</p>
<p>谈到死亡多少有点畏惧，不过生在农村，从小到大，也见了不少葬礼。很小的时候不懂事，只觉得好玩，因为丧礼上会有许多敲锣打鼓的，而且很好听。会有道士来穿着大大的道袍做法事，又跳又唱，就是听不清唱的什么。葬礼的规矩也是特别多，各种主事的，鞭炮、挽联、蜡烛香火…..</p>
<p>家这边依旧是土葬，极少有火化的，一般是在外地去世才会火化，即使火化也会进行土葬。遗体及棺木会在灵堂放几天，到了日子便送上山入土。冬天还好，如果是夏天，遗体放久了就会有味道而且会有苍蝇蚊子之类的，所以现在也有了冰棺，等到要上山时才放到棺木里。</p>
<p>我看过几次躺在里面的人，最近的是我爷爷去世的时候，想想也有六年了。快要合棺的时候才去看最后一眼。就看了一眼，脸上僵僵的，嘴是笑着的。那种笑真的让人觉得冷。</p>
<p>说远了，回到电影吧。搜新闻看到很多人看了这个电影去做入殓师了，觉得很有仪式感很艺术而且也很高薪。电影表现的确实很美，一言一行细致入微，让人觉得躺在那里的仿佛仍旧在世。</p>
<p><img data-src="https://pic.sikie.wang/images/2019/10/08/Snipaste_2019-10-08_16-34-24.png" alt="入殓师.png"></p>
<p>男主的工作就是为往生者整理妆容，让他们在最后一刻仍旧美丽，在最后一刻依旧被温柔相待。不过在国内，这个职业可能没那么多令人尊敬或者心怀敬意，更多的还是暴利。就跟医院的医生护士一样，生死看惯，麻木与否我不知道，但是对死者的敬意我见得不多。</p>
<p>正值青春年少好像谈这些有点不太合适，不过 了解过死亡，才能更加体会到生的意义吧。</p>
<p>我们每走一步都希望有一个好的结果，得到便成幸福。考试，升迁，结婚，但其实结果连同它得到的过程便连接成了一生。好的你要经过，不好的也是经过。所不同的是，你是否在感谢光明的同时依旧感激黑暗，你是否在难过的时候能一如既往地温暖和柔软？</p>
<hr>
<p>本片获第81届奥斯卡最佳外语奖。由泷田洋二郎执导，主演本木雅弘、广末凉子、山崎努等，音乐则由久石让负责。豆瓣评分8.8，很适合一个人在夜晚慢慢观赏，整个电影平淡而不失色彩，每个人看到的点都会不一样。亲情、工作、婚姻、生死，每一样都能给你不同的看法吧。</p>
<p>愿你我都能被世界温柔相待。</p>
]]></content>
      <categories>
        <category>闲谈</category>
      </categories>
      <tags>
        <tag>生活</tag>
        <tag>电影</tag>
      </tags>
  </entry>
</search>
